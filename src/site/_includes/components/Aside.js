const md = require('markdown-it')();

/**
 * Capitalize the first letter of a word.
 * @param {string} str
 * @return {string} A capitalized copy of the string.
 */
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

/**
 * Title case a string of dash separated words
 * @param {string} str
 * @return {string} A title cased copy of the string.
 */
function titleCase(str) {
  return str.split('-').map((part) => {
    return capitalize(part);
  }).join(' ');
}

module.exports = (content, type='note') => {
  let prefix;
  switch (type) {
    case 'note':
      content = md.render(content);
      break;

    case 'caution':
    case 'warning':
    case 'success':
    case 'objective':
    case 'codelab':
      prefix = capitalize(type);
      // Create a <strong> with the type of aside and render it inline with
      // the generated markdown.
      content = `**${prefix}:** ${content}`;
      content = md.render(content);
      break;

    case 'key-term':
      prefix = titleCase(type);
      content = `**${prefix}:** ${content}`;
      content = md.render(content);
      break;

    case 'gotchas':
      prefix = capitalize(type);
      // Note the gotchas prefix has a ! instead of a :
      // And the <strong> tag should appear outside of the <p> tag
      // generated by markdown. This forces an intentional line break.
      content = `<strong>${prefix}!</strong> ${md.render(content)}`;
      break;
  }

  return `
<div class="w-aside w-aside--${type}">
${content}
</div>
  `;
};
