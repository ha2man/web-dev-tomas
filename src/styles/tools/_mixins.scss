// Dependencies:
// tools/_functions.scss

@import 'functions';

// =============================================================================
// MIXINS OVERVIEW
//
// Helpful mixins used throughout the site.
//
// =============================================================================

// sass-lint:disable variable-name-format

// Mixin for styling typography via maps containing required integer values for
// font-family, font-size, font-weight, and line-height; with an optional value
// for letter-spacing.
// @param {!map} $specs - SCSS map with key/value pairs for rendering shorthand
//     'font' property.
// @prop {!number} $specs.FONT_WEIGHT
// @prop {!number} $specs.FONT_SIZE
// @prop {!number} $specs.LINE_HEIGHT
// @prop {!string} $specs.FONT_FAMILY
// @prop {?number} $specs.LETTER_SPACING
// @prop {?string} $specs.TEXT_TRANSFORM
@mixin font($specs) {
  $font_weight: map-get($specs, FONT_WEIGHT);
  $font_size: map-get($specs, FONT_SIZE);
  $font_family: map-get($specs, FONT_FAMILY);
  $line_height: map-get($specs, LINE_HEIGHT);

  // Print font styles in shorthand syntax.
  // sass-lint:disable-block indentation
  font: $font_weight #{$font_size}px / #{calculate_unitless_line_height(
      $line_height,
      $font_size
    )} $font_family;
  // sass-lint:enable-block indentation

  // Add letter-spacing if it's defined in the map.
  @if map-has-key($specs, LETTER_SPACING) {
    $letter_spacing: map-get($specs, LETTER_SPACING);
    letter-spacing: #{$letter_spacing}px;
  }

  // Add text-transform if it's defined in the map.
  @if map-has-key($specs, TEXT_TRANSFORM) {
    $text_transform: map-get($specs, TEXT_TRANSFORM);
    text-transform: $text_transform;
  }

  // Add margin-top if it's defined in the map.
  @if map-has-key($specs, MARGIN_TOP) {
    $margin_top: map-get($specs, MARGIN_TOP);
    margin-top: #{$margin_top}px;
  }

  // Add margin-bottom if it's defined in the map.
  @if map-has-key($specs, MARGIN_BOTTOM) {
    $margin_bottom: map-get($specs, MARGIN_BOTTOM);
    margin-bottom: #{$margin_bottom}px;
  }
}

// Mixin for a Material icon. This mimics the important parts of the
// 'material-icons' class defined at http://fonts.googleapis.com/css?family=Material+Icons.
// You can look up the name of an icon at https://material.io/icons/.
@mixin font_material_icon() {
  -moz-osx-font-smoothing: grayscale; // @alternate
  -webkit-font-smoothing: antialiased; // @alternate
  font: normal normal normal 24px / 1 'Material Icons';
  font-feature-settings: 'liga';
  text-rendering: optimizeLegibility;
  text-transform: none;
  word-wrap: normal;
}

// Sets font smoothing variables
// @param {string} $moz The value for moz-osx-font-smoothing
// @param {string} $webkit The value for webkit-font-smoothing
// @param {string} $rendering The value for text-rendering
@mixin font_smoothing($moz, $webkit, $rendering) {
  -moz-osx-font-smoothing: $moz;
  -webkit-font-smoothing: $webkit;
  text-rendering: $rendering;
}
