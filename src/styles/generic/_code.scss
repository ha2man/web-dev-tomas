// Dependencies:
// settings/_colors.scss

// =============================================================================
// CODE OVERVIEW
//
// Code can be inline or in code blocks.
// When it's inline, code snippets have a background and border.
// When it's in a code block, code gets syntax highlighting.
// Because code snippets can appear inside many elements, their sizes are all
// relative to their parent using em units.
//
// =============================================================================

// TODO (robdodson): Need to revsit this color palette.
$CODE_COLORS: (
  blue: #183691,
  teal: #0086b3,
  black: $PRIMARY_TEXT_COLOR,
  purple: #a71d5d,
  maroon: #a71d5d,
  green: #63a35c,
  light-gray: #f7f7f7,
  dark-gray: #969896
);

code {
  font-size: .9em;
  font-weight: 400; // DevSite override
  margin: 0 .25em;
  padding: .125em .25em;
}

code,
pre {
  background: map-get($CODE_COLORS, light-gray);
  border: 1px solid $GREY_300;
  hyphens: none;
  tab-size: 2;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
}

// Code block
pre,
pre[class*='language-'] {
  font: 1em/1.5em $CODE_FONT;
  margin: 32px 0;
  overflow: auto;
  padding: 16px;
}

pre code,
pre[class*='language-'] code {
  font-size: 1em;
  line-height: 1.5em;
  margin: 0;
}

pre code,
table code {
  background: transparent;
  border: 0;
}

table code {
  font-size: .9em; // DevSite override
  font-weight: 400; // DevSite override
  line-height: 1.7em; // DevSite override

  // Prism inserts white space characters before and after code blocks
  // help center them in space.
  &::before,
  &::after {
    content: '\00a0';
    letter-spacing: -3px;
  }
}



// Github-like theme for Prism.js
// @author Luke Askew http://github.com/lukeaskew

// Token colors
// These classes are generated by prism so they don't follow
// our class name format.
// sass-lint:disable class-name-format
.token {
  &.comment,
  &.prolog,
  &.doctype,
  &.cdata {
    color: map-get($CODE_COLORS, dark-gray);
  }

  &.punctuation,
  &.string,
  &.atrule,
  &.attr-value {
    color: map-get($CODE_COLORS, blue);
  }

  &.property,
  &.tag {
    color: map-get($CODE_COLORS, green);
  }

  &.boolean,
  &.number {
    color: map-get($CODE_COLORS, teal);
  }

  &.selector,
  &.attr-name,
  &.attr-value .punctuation:first-child,
  &.keyword,
  &.regex,
  &.important {
    color: map-get($CODE_COLORS, maroon);
  }


  &.operator,
  &.entity,
  &.url,
  .language-css &.string {
    color: map-get($CODE_COLORS, purple);
  }

  &.entity {
    cursor: help;
  }

}

.namespace {
  opacity: .7;
}
// sass-lint:enable class-name-format
